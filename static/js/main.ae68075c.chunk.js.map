{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","todos","setTodos","todo","setTodo","todoEditing","setTodoEditing","editingText","setEditingText","id","class","onSubmit","e","preventDefault","newTodo","Date","getTime","text","completed","concat","type","onChange","target","value","map","className","checked","updatedTodos","toggleComplete","onClick","submitEdit","filter","deleteTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAuGeA,EApGH,WAAO,IAAD,EACUC,IAAMC,SAAS,IADzB,mBACTC,EADS,KACFC,EADE,OAEQH,IAAMC,SAAS,IAFvB,mBAETG,EAFS,KAEHC,EAFG,OAGsBL,IAAMC,SAAS,MAHrC,mBAGTK,EAHS,KAGIC,EAHJ,OAIsBP,IAAMC,SAAS,IAJrC,mBAITO,EAJS,KAIIC,EAJJ,KA4ChB,OACE,sBAAKC,GAAG,YAAR,UACE,sBAAKC,MAAM,MAAX,UACE,qBAAKA,MAAM,mBACX,sBAAKA,MAAM,kBAAX,UACE,gDACA,uBAAMC,SA5Cd,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMC,EAAU,CACdL,IAAI,IAAIM,MAAOC,UACfC,KAAMd,EACNe,WAAW,GAEbhB,EAAS,YAAID,GAAOkB,OAAOL,IAC3BV,EAAQ,KAmCF,UACE,uBACEM,MAAM,eACNU,KAAK,OACLC,SAAU,SAACT,GAAD,OAAOR,EAAQQ,EAAEU,OAAOC,QAClCA,MAAOpB,IAET,wBAAQO,MAAM,kBAAkBU,KAAK,SAArC,4BAGJ,qBAAKV,MAAM,sBAEZT,EAAMuB,KAAI,SAACrB,GAAD,OACT,sBAAKO,MAAM,MAAX,UACE,qBAAKA,MAAM,aACX,qBAAKA,MAAM,WAAX,SACE,sBAAmBe,UAAU,OAA7B,UACE,sBAAKA,UAAU,YAAf,UACE,uBACEL,KAAK,WACLX,GAAG,YACHiB,QAASvB,EAAKe,UACdG,SAAU,kBAjD1B,SAAwBZ,GACtB,IAAIkB,EAAe,YAAI1B,GAAOuB,KAAI,SAACrB,GAIjC,OAHIA,EAAKM,KAAOA,IACdN,EAAKe,WAAaf,EAAKe,WAElBf,KAETD,EAASyB,GA0CqBC,CAAezB,EAAKM,OAErCN,EAAKM,KAAOJ,EACb,uBACEe,KAAK,OACLC,SAAU,SAACT,GAAD,OAAOJ,EAAeI,EAAEU,OAAOC,UAG3C,8BAAMpB,EAAKc,UAGf,sBAAKQ,UAAU,eAAf,UACGtB,EAAKM,KAAOJ,EACX,wBAAQK,MAAM,kBAAkBmB,QAAS,kBApDvD,SAAoBpB,GAClB,IAAMkB,EAAe,YAAI1B,GAAOuB,KAAI,SAACrB,GAInC,OAHIA,EAAKM,KAAOA,IACdN,EAAKc,KAAOV,GAEPJ,KAETD,EAASyB,GACTrB,EAAe,MA4C4CwB,CAAW3B,EAAKM,KAA/D,yBAEA,wBAAQC,MAAM,kBAAkBmB,QAAS,kBAAMvB,EAAeH,EAAKM,KAAnE,kBAEA,wBAAQC,MAAM,iBAAiBmB,QAAS,kBAvEtD,SAAoBpB,GAClB,IAAIkB,EAAe,YAAI1B,GAAO8B,QAAO,SAAC5B,GAAD,OAAUA,EAAKM,KAAOA,KAC3DP,EAASyB,GAqEiDK,CAAW7B,EAAKM,KAA9D,yBAvBMN,EAAKM,MA2BnB,qBAAKC,MAAM,uBCpFJuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ae68075c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [todos, setTodos] = React.useState([]);\n  const [todo, setTodo] = React.useState(\"\");\n  const [todoEditing, setTodoEditing] = React.useState(null);\n  const [editingText, setEditingText] = React.useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const newTodo = {\n      id: new Date().getTime(),\n      text: todo,\n      completed: false,\n    };\n    setTodos([...todos].concat(newTodo));\n    setTodo(\"\");\n  }\n\n  function deleteTodo(id) {\n    let updatedTodos = [...todos].filter((todo) => todo.id !== id);\n    setTodos(updatedTodos);\n  }\n\n  function toggleComplete(id) {\n    let updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  }\n\n  function submitEdit(id) {\n    const updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.text = editingText;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n    setTodoEditing(null);\n  }\n\n  return (\n    <div id=\"todo-list\">\n      <div class=\"row\">\n        <div class=\"col-1 col-sm-3\"></div>\n        <div class=\"col-10 col-sm-6\">\n          <h1>Your Todo List</h1>\n          <form onSubmit={handleSubmit}>\n            <input\n              class=\"form-control\"\n              type=\"text\"\n              onChange={(e) => setTodo(e.target.value)}\n              value={todo}\n            />\n            <button class=\"btn btn-success\" type=\"submit\">Add Todo</button>\n          </form>\n        </div>\n        <div class=\"col-1 col-sm-3\"></div>\n      </div>\n      {todos.map((todo) => (\n        <div class=\"row\">\n          <div class=\"col-sm-3\"></div>\n          <div class=\"col-sm-6\">\n            <div key={todo.id} className=\"todo\">\n              <div className=\"todo-text\">\n                <input\n                  type=\"checkbox\"\n                  id=\"completed\"\n                  checked={todo.completed}\n                  onChange={() => toggleComplete(todo.id)}\n                />\n                {todo.id === todoEditing ? (\n                <input\n                  type=\"text\"\n                  onChange={(e) => setEditingText(e.target.value)}\n                />\n                ) : (\n                <div>{todo.text}</div>\n                )}\n              </div>\n            <div className=\"todo-actions\">\n              {todo.id === todoEditing ? (\n                <button class=\"btn btn-warning\" onClick={() => submitEdit(todo.id)}>Submit Edit</button>\n                ) : (\n                <button class=\"btn btn-warning\" onClick={() => setTodoEditing(todo.id)}>Edit</button>\n                )}\n                <button class=\"btn btn-danger\" onClick={() => deleteTodo(todo.id)}>Delete</button>\n              </div>\n            </div>\n          </div>\n        <div class=\"col-sm-3\"></div>\n      </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}